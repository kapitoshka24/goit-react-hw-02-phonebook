{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","id","nameInputId","shortid","generate","numberInputId","handleChange","evt","target","value","setState","findByName","props","contacts","some","handleSubmit","preventDefault","alert","updateState","reset","onSubmit","this","type","onChange","pattern","title","required","Component","Filter","filter","filterContacts","ContactList","onDelete","map","onClick","bind","App","updateStateSubmit","previousState","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContacts","contactId","contactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74f18de3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactForm.css\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\r\n    updateState: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    id: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      id: shortid.generate(),\r\n    });\r\n  };\r\n\r\n  findByName = (name) => {\r\n    return this.props.contacts.some(([elem]) => elem === name);\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const { name, number, id } = this.state;\r\n\r\n    if (this.findByName(name)) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    this.props.updateState(name, number, id);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            id={this.nameInputId}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            id={this.numberInputId}\r\n            required\r\n          />\r\n        </label>\r\n        <button>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = ({ filter, filterContacts }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input type=\"text\" value={filter} onChange={filterContacts} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  filterContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactList.css\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ol>\r\n    {contacts.map(([name, number, id]) => (\r\n      <li key={shortid.generate()}>\r\n        {name}: {number}\r\n        <button onClick={onDelete.bind(this, id)}>Delete</button>\r\n      </li>\r\n    ))}\r\n  </ol>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      [\"Rosie Simpson\", \"459-12-56\", \"id-1\"],\n      [\"Hermione Kline\", \"443-89-12\", \"id-2\"],\n      [\"Eden Clements\", \"645-17-79\", \"id-3\"],\n      [\"Annie Copeland\", \"227-91-26\", \"id-4\"],\n    ],\n    filter: \"\",\n  };\n\n  filterContacts = (evt) => {\n    this.setState({ filter: evt.target.value });\n  };\n\n  updateStateSubmit = (name, number, id) => {\n    this.setState((previousState) => ({\n      contacts: [...previousState.contacts, [name, number, id]],\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(([name]) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContacts = (contactId) => {\n    this.setState((previousState) => ({\n      contacts: previousState.contacts.filter(([, , id]) => id !== contactId),\n    }));\n  };\n\n  render() {\n    const contactsList = this.getVisibleContacts();\n    const { contacts, filter } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} updateState={this.updateStateSubmit} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} filterContacts={this.filterContacts} />\n        <ContactList contacts={contactsList} onDelete={this.deleteContacts} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}